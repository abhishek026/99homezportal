{"version":3,"file":"dropdown-treeview.component.js","sources":["dropdown-treeview.component.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAOM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AACN;AACA;AACA;AACA","sourcesContent":["import { Component, EventEmitter, Input, Output, ViewChild, TemplateRef } from '@angular/core';\r\nimport { TreeviewI18n } from './treeview-i18n';\r\nimport { TreeviewConfig } from './treeview-config';\r\nimport { TreeviewComponent } from './treeview.component';\r\nimport { DropdownDirective } from './dropdown.directive';\r\nvar DropdownTreeviewComponent = /** @class */ (function () {\r\n    function DropdownTreeviewComponent(i18n, defaultConfig) {\r\n        this.i18n = i18n;\r\n        this.defaultConfig = defaultConfig;\r\n        this.buttonClass = 'btn-outline-secondary';\r\n        this.selectedChange = new EventEmitter(true);\r\n        this.filterChange = new EventEmitter();\r\n        this.config = this.defaultConfig;\r\n    }\r\n    DropdownTreeviewComponent.prototype.getText = function () {\r\n        return this.i18n.getText(this.treeviewComponent.selection);\r\n    };\r\n    DropdownTreeviewComponent.prototype.onSelectedChange = function (values) {\r\n        this.selectedChange.emit(values);\r\n    };\r\n    DropdownTreeviewComponent.prototype.onFilterChange = function (text) {\r\n        this.filterChange.emit(text);\r\n    };\r\n    DropdownTreeviewComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ngx-dropdown-treeview',\r\n                    template: \"\\n      <div class=\\\"dropdown\\\" ngxDropdown>\\n        <button class=\\\"btn\\\" [ngClass]=\\\"buttonClass\\\" type=\\\"button\\\" role=\\\"button\\\" ngxDropdownToggle>\\n          {{getText()}}\\n        </button>\\n        <div ngxDropdownMenu aria-labelledby=\\\"dropdownMenu\\\" (click)=\\\"$event.stopPropagation()\\\">\\n          <div class=\\\"dropdown-container\\\">\\n            <ngx-treeview [config]=\\\"config\\\" [headerTemplate]=\\\"headerTemplate\\\" [items]=\\\"items\\\" [itemTemplate]=\\\"itemTemplate\\\" (selectedChange)=\\\"onSelectedChange($event)\\\"\\n              (filterChange)=\\\"onFilterChange($event)\\\">\\n            </ngx-treeview>\\n          </div>\\n        </div>\\n      </div>\\n    \",\r\n                    styles: [\"\\n      .dropdown {\\n        width: 100%;\\n        display: inline-block;\\n      }\\n\\n      .dropdown button {\\n        width: 100%;\\n        margin-right: .9rem;\\n        text-align: left;\\n        overflow: hidden;\\n        padding-right: 30px;\\n        text-overflow: ellipsis;\\n      }\\n\\n      .dropdown button::after {\\n        position: absolute;\\n        right: .6rem;\\n        margin-top: .6rem;\\n      }\\n\\n      .dropdown .dropdown-menu .dropdown-container {\\n        padding: 0 .6rem;\\n      }\\n    \"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DropdownTreeviewComponent.ctorParameters = function () { return [\r\n        { type: TreeviewI18n },\r\n        { type: TreeviewConfig }\r\n    ]; };\r\n    DropdownTreeviewComponent.propDecorators = {\r\n        buttonClass: [{ type: Input }],\r\n        headerTemplate: [{ type: Input }],\r\n        itemTemplate: [{ type: Input }],\r\n        items: [{ type: Input }],\r\n        config: [{ type: Input }],\r\n        selectedChange: [{ type: Output }],\r\n        filterChange: [{ type: Output }],\r\n        treeviewComponent: [{ type: ViewChild, args: [TreeviewComponent,] }],\r\n        dropdownDirective: [{ type: ViewChild, args: [DropdownDirective,] }]\r\n    };\r\n    return DropdownTreeviewComponent;\r\n}());\r\nexport { DropdownTreeviewComponent };\r\n"]}