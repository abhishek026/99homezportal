import { Directive, ElementRef } from '@angular/core';
import { DropdownDirective } from './dropdown.directive';
import * as ɵngcc0 from '@angular/core';
var DropdownToggleDirective = /** @class */ (function () {
    function DropdownToggleDirective(dropdown, elementRef) {
        this.dropdown = dropdown;
        dropdown.toggleElement = elementRef.nativeElement;
    }
    /** @nocollapse */
    DropdownToggleDirective.ctorParameters = function () { return [
        { type: DropdownDirective },
        { type: ElementRef }
    ]; };
DropdownToggleDirective.ɵfac = function DropdownToggleDirective_Factory(t) { return new (t || DropdownToggleDirective)(ɵngcc0.ɵɵdirectiveInject(DropdownDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DropdownToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DropdownToggleDirective, selectors: [["", "ngxDropdownToggle", ""]], hostAttrs: ["aria-haspopup", "true", 1, "dropdown-toggle"], hostVars: 1, hostBindings: function DropdownToggleDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function DropdownToggleDirective_click_HostBindingHandler() { return ctx.dropdown.toggle(); });
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-expanded", ctx.dropdown.isOpen);
    } } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropdownToggleDirective, [{
        type: Directive,
        args: [{
                selector: '[ngxDropdownToggle]',
                // tslint:disable-next-line:use-host-property-decorator
                host: {
                    'class': 'dropdown-toggle',
                    'aria-haspopup': 'true',
                    '[attr.aria-expanded]': 'dropdown.isOpen',
                    '(click)': 'dropdown.toggle()'
                }
            }]
    }], function () { return [{ type: DropdownDirective }, { type: ɵngcc0.ElementRef }]; }, null); })();
    return DropdownToggleDirective;
}());
export { DropdownToggleDirective };

//# sourceMappingURL=dropdown-toggle.directive.js.map