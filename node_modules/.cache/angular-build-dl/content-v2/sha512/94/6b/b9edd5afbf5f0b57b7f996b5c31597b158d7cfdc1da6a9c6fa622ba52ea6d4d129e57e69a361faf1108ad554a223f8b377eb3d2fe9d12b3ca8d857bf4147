{"version":3,"sources":["webpack:///src/app/services/widget.service.ts"],"names":["WidgetService","http","auth","baseUrl","currentAuthKey","subscribe","key","Authorization","headers","currentInstituteId","id","institute_id","getBaseUrl","obj","url","post","pipe","res","err","get","put","requested_date","format","batchId","standard_id","subject_id","batch_id","institution_id","name","obje","inst_id","data","Schedule","start_date","end_date"],"mappings":"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","file":"default~app-components-communicate-communicate-module~app-components-course-module-course-module-mod~5bd5763d-es5.js","sourcesContent":["\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from 'rxjs';\nimport { AuthenticatorService } from \"./authenticator.service\";\nimport * as moment from 'moment';\n\n\n\n\n@Injectable()\nexport class WidgetService {\n    baseUrl: string = '';\n    Authorization: any;\n    headers: any;\n    institute_id: any;\n\n    constructor(private http: HttpClient, private auth: AuthenticatorService) {\n        this.auth.currentAuthKey.subscribe(key => {\n            this.Authorization = key;\n            this.headers = new HttpHeaders({ \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n        })\n        this.auth.currentInstituteId.subscribe(id => {\n            this.institute_id = id;\n        });\n        // this.institute_id = this.auth.getInstituteId();\n        // this.Authorization = this.auth.getAuthToken();\n        this.baseUrl = this.auth.getBaseUrl();\n    }\n\n\n    fetchSchedWidgetData(obj): Observable<any> {\n\n        let url = this.baseUrl + \"/api/v1/dashboard/admin//todayClassSchedule/\" + this.institute_id;\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ));\n    }\n\n\n    fetchFeeWidgetData(obj): Observable<any> {\n        obj.institute_id = this.institute_id;\n        let url = this.baseUrl + \"/api/v1/studentWise/fee/feesStats/\" + this.institute_id;\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ));\n    }\n\n\n    getSettings(): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/institute/settings/\" + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ));\n    }\n\n    getInstituteSettings(): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/institutes/\" + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ));\n    }\n\n    getAllplan(): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/proctur/getAllPlans\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ));\n    }\n\n    getAllocatedStorageDetails(): any {\n        let url = this.baseUrl + \"/api/v1/instFileSystem/getUsedSpace/\" + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(\n            map(\n                res => {\n                    return res;\n                },\n                err => {\n                    return err;\n                }\n\n            ));\n\n\n    }\n\n    getAttendance(obj): any {\n        let url = this.baseUrl + \"/api/v1/attendance\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    getAllteachers(): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/teachers/all/\" + this.institute_id + \"?active=Y\";\n\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n\n    updateAttendance(obj): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/attendance\";\n\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n\n    cancelClassSchedule(obj) {\n        let url = this.baseUrl + \"/api/v1/batchClsSched/cancel\";\n\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n\n    cancelCourseSchedule(obj) {\n        obj.requested_date = moment(obj.requested_date).format(\"YYYY-MM-DD\");\n        let url = this.baseUrl + \"/api/v1/courseClassSchedule/cancelMasterClassSchedule\";\n\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n\n    cancelBatchSchedule(obj) {\n        let url = this.baseUrl + \"/api/v1/batchClsSched/cancel\";\n\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    notifyStudentSchedule(obj) {\n        let url = this.baseUrl + \"/api/v1/coursePlanner/notify\";\n\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n\n    reScheduleClass(obj): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/batchClsSched/reschedule\";\n\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    fetchCourseLevelWidgetData(obj) {\n        obj.requested_date = moment(obj.requested_date).format(\"YYYY-MM-DD\");\n        let url = this.baseUrl + '/api/v1/courseClassSchedule/fetchMasterCourseDetails/todaySchedule';\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    fetchCourseAttendance(obj) {\n        let url = this.baseUrl + '/api/v1/attendance/course';\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    updateCourseAttendance(obj): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/attendance/course\";\n\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    remindCourseLevel(obj): Observable<any> {\n        obj.requested_date = moment(obj.requested_date).format(\"YYYY-MM-DD\");\n        let url = this.baseUrl + \"/api/v1/courseClassSchedule/sendCourseMasterReminder\";\n\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    getListOfTopics(batchId): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/topic_manager/getAllTopics/\" + this.institute_id;\n\n        return this.http.post(url, batchId, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    fetchCombinedData(standard_id, subject_id) {\n        let url = this.baseUrl + \"/api/v1/batches/fetchCombinedBatchData/\" + this.institute_id + \"?standard_id=\" + standard_id + \"&subject_id=\" + subject_id + \"&assigned=Y\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    fetchStudentListData(batch_id) {\n        let url = this.baseUrl + \"/api/v1//studentBatchMap/batches/\" + batch_id;\n        return this.http.post(url, \"\", { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n\n    saveMessageTOServer(obj) {\n        let url = this.baseUrl + \"/api/v1/notification/message/\" + this.institute_id;\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    getAllActiveStudentList() {\n        let url = this.baseUrl + \"/api/v1/students/all/\" + this.institute_id + \"?active=Y\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    getAllTeacherList() {\n        let url = this.baseUrl + \"/api/v1/teachers/all/\" + this.institute_id + \"?active=Y\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    getAllInActiveList() {\n        let url = this.baseUrl + \"/api/v1/students/all/\" + this.institute_id + \"?active=NA\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    getAllAluminiList() {\n        let url = this.baseUrl + \"/api/v1/archive/students/alumni/\" + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    getMessageList(obj) {\n        let url = this.baseUrl + \"/api/v1/notification/message/\" + this.institute_id + \"/all\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n\n    sendNotification(obj) {\n        obj.institution_id = this.institute_id;\n        let url = this.baseUrl + \"/api/v1/alerts/config\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    sendPushNotificationToServer(obj) {\n        obj.institution_id = this.institute_id;\n        let url = this.baseUrl + \"/api/v1/pushNotification/send\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    smsForAddDownload(obj) {\n        let url = this.baseUrl + \"/api/v1/profiles/sendAPPSMS/\" + this.institute_id;\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n\n    ///Course Model Api\n\n    getAllMasterCourse() {\n        let url = this.baseUrl + \"/api/v1/courseMaster/fetch/\" + this.institute_id + \"/all\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    getAllCourse(name) {\n        let url = this.baseUrl + \"/api/v1/courseMaster/fetch/\" + this.institute_id + \"/\" + name;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    getStudentListOfCourse(obje) {\n        let url = this.baseUrl + \"/api/v1/studentBatchMap/manageBatchStudent/\" + this.institute_id;\n        return this.http.post(url, obje, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n\n    getMasterCourseDetails(obj) {\n        obj.requested_date = moment(obj.requested_date).format(\"YYYY-MM-DD\");\n        obj.inst_id = this.institute_id;\n        let url = this.baseUrl + \"/api/v1/courseClassSchedule/fetch\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n\n\n    /// Exam Section\n\n    //get Exam Schedule \n\n    getExamSchedule(obj) {\n        let url = this.baseUrl + \"/api/v1/dashboard/admin/studentExamSchedules/\" + this.institute_id;\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    cancelExamSchedule(obj) {\n        let url = this.baseUrl + \"/api/v1/batchExamSched/cancel\";\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    notifyStudentExam(id) {\n        let url = this.baseUrl + \"/api/v1/batchExamSched/notify/\" + this.institute_id + \"/\" + id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    sendReminder(obj) {\n        obj.inst_id = this.institute_id;\n        obj.requested_date = moment(obj.requested_date).format(\"YYYY-MM-DD\");\n        let url = this.baseUrl + \"/api/v1/courseExamSchedule/sendReminder\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    fetchStudentList(data) {\n        let url = this.baseUrl + \"/api/v1/attendance/exam\";\n        return this.http.post(url, data, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    markAttendance(data) {\n        let url = this.baseUrl + \"/api/v1/attendance/exam\";\n        return this.http.put(url, data, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    fetchStudentExamDetails(batch_id, Schedule) {\n        let url = this.baseUrl + \"/api/v1/StdExam/\" + batch_id + '?schd_id=' + Schedule;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    updateAttendanceDetails(obj) {\n        let url = this.baseUrl + \"/api/v1/StdExam\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    getExamGrades() {\n        let url = this.baseUrl + \"/api/v1/grade_manager/getDetail/\" + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    //Course Model API\n\n    getCourseExamFromServer(obj) {\n        obj.start_date = moment(obj.start_date).format('YYYY-MM-DD');\n        obj.end_date = moment(obj.end_date).format('YYYY-MM-DD');\n        obj.inst_id = this.institute_id;\n        let url = this.baseUrl + \"/api/v1/courseExamSchedule/fetchExamSchld\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res },\n            err => { return err }\n        ))\n    }\n\n    markStudentAttendance(obj) {\n        let url = this.baseUrl + \"/api/v1/StdCourseExam/markAttendance\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res },\n            err => { return err }\n        ))\n    }\n\n    markStudentMarks(obj) {\n        let url = this.baseUrl + '/api/v1/StdCourseExam/updateMarks';\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res },\n            err => { return err }\n        ))\n    }\n\n    getExamStudentsList(id) {\n        let url = this.baseUrl + \"/api/v1/StdCourseExam/\" + id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    cancelExamScheduleCourse(obj) {\n        obj.requested_date = moment(obj.requested_date).format(\"YYYY-MM-DD\");\n        obj.inst_id = this.institute_id;\n        let url = this.baseUrl + \"/api/v1/courseExamSchedule/cancel\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    // SMS Approve/Reject\n\n    changesSMSStatus(obj, id) {\n        let url = this.baseUrl + \"/api/v1/notification/message/\" + this.institute_id + \"/\" + id;\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res },\n            err => { return err }\n        ));\n    }\n   \n}"]}