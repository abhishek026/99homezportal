{"version":3,"file":"treeview-item.directive.d.ts","sources":["treeview-item.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnChanges, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { NavigationService } from './navigation/navigation.service';\nimport { SelectionService } from './selection/selection.service';\nimport { ExpandStateService } from './expand-state.service';\nimport { IndexBuilderService } from './index-builder.service';\nimport { TreeViewLookupService } from './treeview-lookup.service';\nimport { TreeItem } from './treeitem.interface';\nimport { CheckedState } from './checkbox/checked-state';\n/**\n * @hidden\n *\n * A directive which manages the expanded state of the TreeView.\n */\nexport declare class TreeViewItemDirective implements OnInit, OnChanges, OnDestroy {\n    private element;\n    private expandService;\n    private navigationService;\n    private selectionService;\n    private lookupService;\n    private renderer;\n    private ib;\n    dataItem: any;\n    index: string;\n    parentDataItem: any;\n    parentIndex: string;\n    isChecked: CheckedState;\n    isDisabled: boolean;\n    isExpanded: boolean;\n    isSelected: boolean;\n    readonly treeItem: TreeItem;\n    readonly parentTreeItem: TreeItem;\n    ariaChecked: string;\n    readonly id: number;\n    private _isExpanded;\n    private _isSelected;\n    private isInitialized;\n    private subscriptions;\n    constructor(element: ElementRef, expandService: ExpandStateService, navigationService: NavigationService, selectionService: SelectionService, lookupService: TreeViewLookupService, renderer: Renderer2, ib: IndexBuilderService);\n    ngOnInit(): void;\n    ngOnChanges(changes: any): void;\n    ngOnDestroy(): void;\n    subscribe(): void;\n    private registerNavigationItem();\n    private activateItem();\n    private expand(shouldExpand);\n    private isFocusable();\n    private focusItem();\n    private moveLookupItem(changes?);\n    private moveNavigationItem(indexChange?);\n    private disableNavigationItem(disableChange);\n    private setAriaAttributes();\n    private setDisabledClass();\n    private setClass(className, toggle);\n    private updateTabIndex();\n    private setAttribute(attr, value);\n}\n"]}