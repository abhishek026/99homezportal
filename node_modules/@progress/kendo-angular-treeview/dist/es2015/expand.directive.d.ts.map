{"version":3,"file":"expand.directive.d.ts","sources":["expand.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy } from '@angular/core';\nimport { TreeViewComponent } from './treeview.component';\nimport { Subscription } from 'rxjs/Subscription';\n/**\n * A directive which manages the expanded state of the TreeView\n * ([see example]({% slug expandedstate_treeview %})).\n */\nexport declare class ExpandDirective implements OnDestroy {\n    protected treeView: TreeViewComponent;\n    /**\n     * @hidden\n     */\n    isExpanded: <T>(item: T, index: string) => boolean;\n    /**\n     * Defines the item key that will be stored in the `expandedKeys` collection.\n     */\n    expandKey: string | ((context: {\n        index: string;\n        dataItem: any;\n    }) => any);\n    /**\n     * Fires when the `expandedKeys` collection was updated.\n     */\n    expandedKeysChange: EventEmitter<any[]>;\n    /**\n     * Defines the collection that will store the expanded keys.\n     */\n    expandedKeys: any[];\n    protected subscriptions: Subscription;\n    private _expandedKeys;\n    constructor(treeView: TreeViewComponent);\n    ngOnDestroy(): void;\n    protected itemKey(e: any): any;\n    protected toggleExpand({index, dataItem, expand}: any): void;\n}\n"]}