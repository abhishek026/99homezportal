import { ViewContainerRef, EventEmitter, ComponentFactoryResolver, ChangeDetectorRef, OnInit, AfterViewInit } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { Toast } from './toast';
import { BodyOutputType } from './bodyOutputType';
import * as ɵngcc0 from '@angular/core';
export declare class ToastComponent implements OnInit, AfterViewInit {
    private sanitizer;
    private componentFactoryResolver;
    private changeDetectorRef;
    toast: Toast;
    iconClass: string;
    componentBody: ViewContainerRef;
    safeCloseHtml: SafeHtml;
    bodyOutputType: typeof BodyOutputType;
    clickEvent: EventEmitter<{}>;
    constructor(sanitizer: DomSanitizer, componentFactoryResolver: ComponentFactoryResolver, changeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    click(event: MouseEvent, toast: Toast): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToastComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToastComponent, "[toastComp]", never, { "toast": "toast"; "iconClass": "iconClass"; }, { "clickEvent": "clickEvent"; }, never, never>;
}

//# sourceMappingURL=toast.component.d.ts.map