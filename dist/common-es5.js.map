{"version":3,"sources":["webpack:///src/app/components/course-module/course-planner/course-planner.model.ts","webpack:///src/app/components/course-module/create-course/topic/topic.model.ts","webpack:///src/app/components/custom-common/check-box-converter.pipe.ts","webpack:///src/app/services/archiving-service/courses-service.service.ts","webpack:///src/app/services/class-roomService/class-roomlist.service.ts","webpack:///src/app/services/common-api-call.service.ts","webpack:///src/app/services/course-services/exam-schedule.service.ts","webpack:///src/app/services/examgradeservice/exam-grade-service.service.ts","webpack:///src/app/services/institute-setting-service/institute-setting.service.ts","webpack:///src/app/services/report-services/exam.service.ts","webpack:///src/app/services/report-services/get-sms.service.ts","webpack:///src/app/services/teacherService/teacherApi.service.ts","webpack:///src/app/services/user-management/role.service.ts","webpack:///src/app/services/user-management/user.service.ts"],"names":["CoursePlanner","standard_id","subject_id","master_course_name","course_id","batch_id","from_date","isoWeekday","format","to_date","weekday","isCompleted","isPending","isCancelled","isUpcoming","isMarksUpdate","teacher_id","Topic","isEdit","isExpand","Create_Topic","name","parent_topic_id","description","estimated_time","institute_topic_id","priority_order","CheckBoxConverterPipe","value","exponent","CoursesServiceService","http","auth","baseUrl","currentAuthKey","subscribe","key","Authorization","headers","currentInstituteId","id","institute_id","getBaseUrl","url","get","pipe","data","error","obj","post","ClassRoomService","auth1","res","err","inst_id","class_room_id","put","CommonApiCallService","examTypeList","masterDataList","instAcademicYrList","fetchSchoolExamTypeList","sessionStorage","getItem","getData","next","result","instituteId","postData","providedIn","ExamCourseService","baseURL","standard","Type","ExamGradeServiceService","grade_id","InstituteSettingService","successCallback","errorCallBack","patch","ExamService","isProfessional","institute_type","console","log","exam_schd_id","examSchdlType","getSMSService","campaignID","campignViewURL","deleteURL","urlCampaign","tempObj","batch_size","institution_id","order_by","sorted_by","start_index","urlSmsReport","TeacherAPIService","url1","RoleService","UserService","active"],"mappings":"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","file":"common-es5.js","sourcesContent":["import * as moment from 'moment';\n\nexport class CoursePlanner {\n  standard_id?: String = \"-1\";\n  subject_id?: String = \"-1\";\n  master_course_name?: String = \"-1\";\n  course_id?: String = \"-1\";\n  batch_id?: String = \"-1\";\n  from_date?: String = moment().isoWeekday(\"Monday\").format(\"YYYY-MM-DD\");\n  to_date?: String = moment().weekday(7).format(\"YYYY-MM-DD\");\n  isCompleted?: String = \"Y\";\n  isPending?: String = \"Y\";\n  isCancelled?: String = \"Y\";\n  isUpcoming?: String = \"Y\";\n  isMarksUpdate?: String = \"Y\";\n  teacher_id?: String = \"-1\";\n};\n","export class Topic {\n  topicId: string;\n  topicName: string;\n  parentTopicId: string;\n  estimated_time: number;\n  description: string;\n  subTopic: Topic[];\n  addSubtopic: any[];\n  isEdit: boolean = false;\n  isExpand:boolean = false;\n}\n\nexport class Create_Topic {\n  name: string = '';\n  standard_id: string = '-1';\n  subject_id: string = '-1';\n  parent_topic_id: string = '-1';\n  description: string = '';\n  estimated_time: number = 0;\n  institute_topic_id: string = '-1';\n  priority_order?: number = 0;\n}\n","import {  Pipe, PipeTransform } from '@angular/core';\n/* Used to cconvert the input type id to text for user view purpose */\n@Pipe({ name: 'checkBoxConverter' })\nexport class CheckBoxConverterPipe implements PipeTransform {\n  transform(value: any, exponent: any): any {\n    if (value == 1) {\n      return 'textbox';\n    }\n    else if (value == 2) {\n      return \"checkbox\";\n    }\n    else if (value == 3) {\n      return \"dropdown\";\n    }\n    else if (value == 4) {\n      return \"multiselect\";\n    }\n  }\n}","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticatorService } from \"../authenticator.service\";\nimport * as moment from 'moment';\n\n@Injectable()\nexport class CoursesServiceService {\n  baseUrl: string = '';\n  Authorization: any;\n  headers;\n  institute_id;\n\n  constructor(private http: HttpClient, private auth: AuthenticatorService)\n   {\n    this.auth.currentAuthKey.subscribe(key => {\n      this.Authorization = key;\n      this.headers = new HttpHeaders({ \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n    })\n    this.auth.currentInstituteId.subscribe(id => {\n      this.institute_id = id;\n    });\n    this.baseUrl = this.auth.getBaseUrl();\n  }\n\n  getCoursesList(){\n    let url = this.baseUrl + \"/api/v1/courseMaster/fetch/courses/\" + this.institute_id + \"/all\"\n    return this.http.get(url ,{headers:this.headers}).pipe(map(\n      (data:any)=>{\n        return data;\n      },\n      (error:any)=>{\n        return error;\n      }\n    ))\n  }\n\n  courses(obj){\n    let url= this.baseUrl + \"/api/v1/archive/course\"\n    return this.http.post(url , obj , {headers:this.headers}).pipe(map(\n      (data:any)=>{\n        return data;\n      },\n      (error:any)=>{\n        return error;\n      }\n    ))\n  }\n\n  batches(obj){\n    let url= this.baseUrl + \"/api/v1/archive/batch\"\n    return this.http.post(url , obj , {headers:this.headers}).pipe(map(\n      (data:any)=>{\n        return data;\n      },\n      (error:any)=>{\n        return error;\n      }\n    ))\n  }\n  getBatches(){\n    let url = this.baseUrl + \"/api/v1/batches/all/\" + this.institute_id;\n    return this.http.get(url , {headers:this.headers}).pipe(map(\n      (data:any)=>{\n        return data;\n      },\n      (error:any)=>{\n        return error;\n      }\n    ))\n  }\n\n  courseArchiveStatus(){\n    let url = this.baseUrl + \"/api/v1/archive/course/report/\" + this.institute_id;\n    return this.http.get(url , {headers:this.headers}).pipe(map(\n      (data:any)=>{\n        return data;\n      },\n      (error:any)=>{\n        return error;\n      }\n    ))\n  }\n\n  batchArchiveStatus(){\n    let url = this.baseUrl + \"/api/v1/archive/batch/report/\" + this.institute_id;\n    return this.http.get(url , {headers:this.headers}).pipe(map(\n      (data:any)=>{\n        return data;\n      },\n      (error:any)=>{\n        return error;\n      }\n    ))\n  }\n\n  studentsArchiveData(){\n    let url = this.baseUrl + \"/api/v1/archive/students/\" + this.institute_id;\n    return this.http.get(url , {headers:this.headers}).pipe(map(\n      (data:any)=>{\n        return data;\n      },\n      (error:any)=>{\n        return error;\n      }\n    ))\n  }\n\n  archiveStudents(obj){\n    let url = this.baseUrl + \"/api/v1/archive/students\"\n    return this.http.post(url , obj , {headers:this.headers}).pipe(map(\n      (data:any)=>{\n        return data;\n      },\n      (error:any)=>{\n        return error;\n      }\n    ))\n  }\n\n  archivedStudents(){\n    let url = this.baseUrl + \"/api/v1/archive/students/report/\" + this.institute_id\n    return this.http.get(url , {headers:this.headers}).pipe(map(\n      (data:any)=>{\n        return data;\n      },\n      (error:any)=>{\n        return error;\n      }\n    ))\n  }\n\n}\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticatorService } from \"../authenticator.service\";\n\n\n@Injectable()\nexport class ClassRoomService {\n\n    baseUrl: string = '';\n    institute_id: string;\n    Authorization: string;\n    headers;\n\n    constructor(private http: HttpClient, private auth1: AuthenticatorService) {\n        this.auth1.currentAuthKey.subscribe(key => {\n            this.Authorization = key;\n            this.headers = new HttpHeaders({ \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n        })\n        this.auth1.currentInstituteId.subscribe(id => {\n            this.institute_id = id;\n        });\n        this.baseUrl = this.auth1.getBaseUrl();\n    }\n\n    fetchClassList() {\n        let url = this.baseUrl + \"/api/v1/batchClassRoom/all/\" + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }))\n    }\n\n    saveClassroomDetail(obj) {\n        let url = this.baseUrl + \"/api/v1/batchClassRoom/\";\n        obj.inst_id = this.institute_id;\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    updateclassListData(obj) {\n        let url = this.baseUrl + \"/api/v1/batchClassRoom/\" + obj.class_room_id;\n        obj.inst_id = this.institute_id;\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"./http.service\";\nimport { Observable } from \"rxjs/Observable\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CommonApiCallService {\n  public examTypeList = new BehaviorSubject(null);\n  public masterDataList = new BehaviorSubject(null);\n  public instAcademicYrList = new BehaviorSubject(null);\n\n  constructor(private http: HttpService) {\n    this.fetchSchoolExamTypeList();\n  }\n  fetchSchoolExamTypeList() {\n    if (sessionStorage.getItem(\"is_institute_type_school\") == 'true') {\n      this.http.getData(\"/api/v1/courseExamSchedule/fetch-exam-type/\" + sessionStorage.getItem(\"institute_id\"))\n        .subscribe((data: any) => {\n          this.examTypeList.next(data.result);\n        });\n    }\n  }\n  fetchInstituteExamTypes(instituteId: string): Observable<any> {\n    let url = \"/api/v1/courseExamSchedule/fetch-exam-type/\" + instituteId+\"?is_used_data=true\";\n    return this.http.getData(url);\n  }\n  fetchMasterData(): BehaviorSubject<any> {\n      if (this.masterDataList.value == null) {\n        let obj = [\n          \"MOTHER_TOUNGE\",\n          \"PROFESSION\",\n          \"CASTE_CATEGORY\",\n          \"BLOOD_GROUP\"\n        ];\n        let url = \"/api/v1/masterData/all\";\n        this.http.postData(url, obj).subscribe(data => {\n          this.masterDataList.next(data)\n        });\n        return this.masterDataList;\n      }\n      else {\n        return this.masterDataList;\n      }\n  }\n  getAllFinancialYear(): BehaviorSubject<any> {\n    if (sessionStorage.getItem(\"is_institute_type_school\") == 'true') {\n      if (this.instAcademicYrList.value == null) {\n        let url = \"/api/v1/academicYear/all/\" + sessionStorage.getItem(\"institute_id\");\n        this.http.getData(url).subscribe(data => {\n          this.instAcademicYrList.next(data);\n        })\n        return this.instAcademicYrList;\n      } else {\n        return this.instAcademicYrList;\n      }\n    }\n  }\n\n}\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticatorService } from '../authenticator.service';\n\n@Injectable()\n\nexport class ExamCourseService {\n\n    baseURL: string = \"\";\n    Authorization: any;\n    headers;\n    institute_id;\n\n    constructor(\n        private http: HttpClient,\n        private auth: AuthenticatorService,\n    ) {\n        this.auth.currentAuthKey.subscribe(key => {\n            this.Authorization = key;\n            this.headers = new HttpHeaders({ \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n        })\n        this.auth.currentInstituteId.subscribe(id => {\n            this.institute_id = id;\n        });\n        this.baseURL = this.auth.getBaseUrl();\n\n    }\n\n    // Function For Lang Model\n\n\n    getCombinedList(standard, subject_id) {\n        let url = this.baseURL + \"/api/v1/batches/fetchCombinedBatchData/\" + this.institute_id + \"?standard_id=\" + standard + \"&subject_id=\" + subject_id + \"&assigned=N\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    getExamSchedule(id) {\n        let url = this.baseURL + \"/api/v1/batchExamSched/\" + id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    putRequestExamSchedule(data) {\n        let url = this.baseURL + \"/api/v1/batchExamSched\";\n        return this.http.put(url, data, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err }\n        ))\n    }\n\n    postRequestExamSchedule(data) {\n        let url = this.baseURL + \"/api/v1/batchExamSched\";\n        return this.http.post(url, data, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err }\n        ))\n    }\n\n    serverRequestToSaveSchedule(data, Type) {\n        let url = this.baseURL + \"/api/v1/batchExamSched\";\n        if (Type == \"post\") {\n            return this.http.post(url, data, { headers: this.headers }).pipe(map(\n                res => { return res; },\n                err => { return err; }\n            ))\n        } else {\n            return this.http.put(url, data, { headers: this.headers }).pipe(map(\n                res => { return res; },\n                err => { return err; }\n            ))\n        }\n    }\n\n    notifyStudentExam(id) {\n        let url = this.baseURL + \"/api/v1/batchExamSched/notify/\" + this.institute_id + \"/\" + id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    fetchStudentList(data) {\n        let url = this.baseURL + \"/api/v1/attendance/exam\";\n        return this.http.post(url, data, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    markAttendance(data) {\n        let url = this.baseURL + \"/api/v1/attendance/exam\";\n        return this.http.put(url, data, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    cancelExamSchedule(obj) {\n        let url = this.baseURL + \"/api/v1/batchExamSched/cancel\";\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    notifyCancelledClass(obj) {\n        let url = this.baseURL + \"/api/v1/coursePlanner/notify\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    uncancelClassSchedule(obj) {\n        let url = this.baseURL + \"/api/v1/batchExamSched/unCancel\";\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    ///////////////////////////////////\n\n\n    /// For Course Model ///\n\n    getMasterCourse() {\n        let url = this.baseURL + \"/api/v1/courseMaster/fetch/\" + this.institute_id + \"/all\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    getSchedule(obj) {\n        obj.inst_id = this.institute_id;\n        let url = this.baseURL + \"/api/v1/courseExamSchedule/fetch\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    sendReminder(obj) {\n        obj.inst_id = this.institute_id;\n        let url = this.baseURL + \"/api/v1/courseExamSchedule/sendReminder\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    cancelExamScheduleCourse(obj) {\n        obj.inst_id = this.institute_id;\n        let url = this.baseURL + \"/api/v1/courseExamSchedule/cancel\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    fetchCourseListData(data) {\n        let url = this.baseURL + \"/api/v1/courseMaster/fetch/\" + this.institute_id + \"/\" + data;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    updateExamSch(data) {\n        data.inst_id = this.institute_id;\n        let url = this.baseURL + \"/api/v1/courseExamSchedule/update\";\n        return this.http.post(url, data, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    updateExamSubjectWise(data){\n      let url = this.baseURL + \"/api/v1/coursePlanner/update\";\n      return this.http.put(url, data, { headers: this.headers }).pipe(map(\n          res => { return res; },\n          err => { return err }\n      ))\n    }\n\n}\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticatorService } from \"../authenticator.service\";\nimport * as moment from 'moment';\n\n\n@Injectable()\nexport class ExamGradeServiceService {\n\n  baseUrl: string = '';\n  Authorization: any;\n  headers;\n  institute_id;\n\n  constructor(private http: HttpClient,\n    private auth: AuthenticatorService, ) {\n    this.auth.currentAuthKey.subscribe(key => {\n      this.Authorization = key;\n      this.headers = new HttpHeaders({ \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n    });\n    this.auth.currentInstituteId.subscribe(id => {\n      this.institute_id = id;\n    });\n    this.baseUrl = this.auth.getBaseUrl();\n  }\n\n  fetchAllData() {\n    let url = this.baseUrl + \"/api/v1/grade_manager/getDetail/\" + this.institute_id;\n    return this.http.get(url, { headers: this.headers }).pipe(map(\n      data => {\n        return data;\n      },\n      error => {\n        return error;\n      }\n    ))\n  }\n\n  addData(obj) {\n    let url = this.baseUrl + \"/api/v1/grade_manager/create\";\n    return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n      data => {\n        return data;\n      },\n      error => {\n        return error;\n      }\n    ))\n  }\n\n  saveEdited(obj) {\n    let url = this.baseUrl + \"/api/v1/grade_manager/update\";\n    return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n      data => {\n        return data;\n      },\n      error => {\n        return error;\n      }\n    ))\n  }\n\n  deleteRow(obj) {\n    let url = this.baseUrl + \"/api/v1/grade_manager/delete/\" + this.institute_id + \"/\" + obj.grade_id;\n    return this.http.delete(url, { headers: this.headers }).pipe(map(\n      data => {\n        return data;\n      },\n      error => {\n        return error;\n      }\n    ))\n  }\n}\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticatorService } from '../authenticator.service';\n\n@Injectable()\n\nexport class InstituteSettingService {\n\n    baseURL: string = \"\";\n    Authorization: any;\n    headers;\n    institute_id;\n\n    constructor(\n        private http: HttpClient,\n        private auth: AuthenticatorService,\n    ) {\n        this.auth.currentAuthKey.subscribe(key => {\n            this.Authorization = key;\n            this.headers = new HttpHeaders(\n                { \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n        })\n        this.auth.currentInstituteId.subscribe(id => {\n            this.institute_id = id;\n        });\n        this.baseURL = this.auth.getBaseUrl();\n    }\n\n    successCallback(res) {\n        return res;\n    }\n\n    errorCallBack(error) {\n        return error\n    }\n\n\n    getInstituteSettingFromServer() {\n        let url = this.baseURL + \"/api/v1/institute/settings/\" + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            this.successCallback,\n            this.errorCallBack\n        ))\n    }\n\n    saveSettingsToServer(data) {\n        data.institute_id = this.institute_id;\n        let url = this.baseURL + \"/api/v1/institute/settings/\";\n        return this.http.put(url, data, { headers: this.headers }).pipe(map(\n            this.successCallback,\n            this.errorCallBack\n        ))\n    }\n    savePartialData(data){\n        // data.institute_id = sessionStorage.getItem('institute_id');\n     let url = this.baseURL + \"/api/v1/institute/settings\";\n        return this.http.patch(url, data, { headers: this.headers }).pipe(map(\n            this.successCallback,\n            this.errorCallBack\n        ))   \n    }\n\n    getIPAddress() {\n    return this.http.get('https://api.ipify.org/?format=json');\n    }\n\n};","\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthenticatorService } from \"../authenticator.service\";\nimport * as moment from 'moment';\n\n\n@Injectable()\n\nexport class ExamService {\n\n    baseUrl: string = '';\n    institute_id: string;\n    Authorization: string;\n    headers;\n    isProfessional: boolean = false;\n\n    /* set default value for each url, header and autherization on service creation */\n    constructor(private http: HttpClient, private auth: AuthenticatorService) {\n        this.auth.currentAuthKey.subscribe(key => {\n            this.Authorization = key;\n            this.headers = new HttpHeaders(\n                { \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n        })\n        this.auth.currentInstituteId.subscribe(id => {\n            this.institute_id = id;\n        });\n        this.baseUrl = this.auth.getBaseUrl();\n        this.auth.institute_type.subscribe(\n            res => {\n                if (res == 'LANG') {\n                    this.isProfessional = true;\n                } else {\n                    this.isProfessional = false;\n                }\n            }\n        )\n    }\n\n    ExamReport(): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/courseMaster/fetch/\" + this.institute_id + \"/all\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    batchExamReport(obj): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/batches/fetchCombinedBatchData/\" + this.institute_id + \"?standard_id=\" + obj.standard_id + \"&subject_id=\" + obj.subject_id + \"&assigned=N\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n\n        ))\n    }\n\n    getCourses(obj): Observable<any> {\n        let url = this.baseUrl + \"/api/v1/courseMaster/fetch/\" + this.institute_id + \"/\" + obj\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    getSubject(obj) {\n        let url = this.baseUrl + \"/api/v1/courseMaster/fetch/courses/\" + this.institute_id + \"/\" + obj\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    getExamSchedule(obj) {\n        let url = this.baseUrl + \"/api/v1/batchExamSched/\" + obj\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    viewExamData(obj) {\n        let url = this.baseUrl + \"/api/v1/reports/StdExam\"\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    viewDetailData(obj) {\n        let url = this.baseUrl + \"/api/v1/reports/StdExam/\" + obj\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    //   New Exam Report APIs\n    getAllExamReport(obj) {\n        console.log(\"obj\", obj);\n        let url: any;\n        if (obj.from_date == null || obj.from_date == \"\") {\n            url = this.baseUrl + \"/api/v1/reports/StdExam/examReport/\" + this.institute_id + \"?master_course_name=\" + obj.master_course_name + \"&standard_id=\" + obj.standard_id + \"&subject_id=\" + obj.subject_id + \"&from_date=\" + obj.from_date + \"&to_date=\" + obj.to_date;\n        }\n        else {\n            url = this.baseUrl + \"/api/v1/reports/StdExam/examReport/\" + this.institute_id + \"?master_course_name=\" + obj.master_course_name + \"&standard_id=\" + obj.standard_id + \"&subject_id=\" + obj.subject_id + \"&from_date=\" + moment(obj.from_date).format(\"YYYY-MM-DD\") + \"&to_date=\" + moment(obj.to_date).format(\"YYYY-MM-DD\");\n        }\n\n        // let url = this.baseUrl + \"/api/v1/reports/StdExam/examReport/\" + this.institute_id + \"?from_date=\"+obj.from_date+\"&to_date=\"+obj.to_date\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    getCourseWiseReport(course_id) {\n        let url = \"\";\n        if (!this.isProfessional) {\n            url = this.baseUrl + \"/api/v1/reports/StdExam/examReport/courseWise/\" + this.institute_id + \"?course_id=\" + course_id;\n        }\n        else {\n            url = this.baseUrl + \"/api/v1/reports/StdExam/examReport/courseWise/\" + this.institute_id + \"?batch_id=\" + course_id;\n        }\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    getExamWiseReport(exam_schd_id, examSchdlType) {\n        let url = \"\";\n        if (!this.isProfessional) {\n            if (examSchdlType) {\n                url = this.baseUrl + \"/api/v1/reports/StdExam/examReport/examWise/\" + this.institute_id + \"?exam_schedule_id=\" + exam_schd_id; // for course model\n            }\n            else {\n                url = this.baseUrl + \"/api/v1/reports/StdExam/examReport/examWise/\" + this.institute_id + \"?course_exam_schedule_id=\" + exam_schd_id; // for course model\n            }\n        }\n        else {\n            url = this.baseUrl + \"/api/v1/reports/StdExam/examReport/examWise/\" + this.institute_id + \"?exam_schedule_id=\" + exam_schd_id; // for batch model\n        }\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    getSubjectWiseReport(subject_id) {\n        let url = this.baseUrl + \"/api/v1/reports/StdExam/examReport/examWise/performance/\" + this.institute_id + \"?subject_id=\" + subject_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    downloadExamReport(exam_schd_id, examSchdlType) {\n        let url = \"\";\n        if (!this.isProfessional) {\n            if (examSchdlType) {\n                url = this.baseUrl + \"/api/v1/reports/StdExam/downloadExamReport/examWise/\" + this.institute_id + \"?exam_schedule_id=\" + exam_schd_id; // for course model\n            }\n            else {\n                url = this.baseUrl + \"/api/v1/reports/StdExam/downloadExamReport/examWise/\" + this.institute_id + \"?course_exam_schedule_id=\" + exam_schd_id; // for course model\n            }\n        }\n        else {\n            url = this.baseUrl + \"/api/v1/reports/StdExam/downloadExamReport/examWise/\" + this.institute_id + \"?exam_schedule_id=\" + exam_schd_id; // for course model\n        }\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n}\n","\nimport {map} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as moment from 'moment';\nimport 'rxjs/Rx';\nimport { AuthenticatorService } from \"../authenticator.service\";\n\n@Injectable()\nexport class getSMSService {\n\n    baseUrl: string = '';\n    institute_id: string;\n    Authorization: string;\n    headers;\n\n\n    /* set default value for each url, header and autherization on service creation */\n    constructor(private http: HttpClient, private auth: AuthenticatorService, ) {\n        this.auth.currentAuthKey.subscribe(key => {\n            this.Authorization = key;\n            this.headers = new HttpHeaders({ \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n        })\n        this.auth.currentInstituteId.subscribe(id => {\n            this.institute_id = id;\n        });\n        this.baseUrl = this.auth.getBaseUrl();\n\n    }\n\n    getCamapignView(campaignID){\n        ///StdMgmtWebAPI/api/v1/campaign/fetch/<Institute Id>/<campaign msg id>\n        let campignViewURL =this.baseUrl + '/api/v1/campaign/fetch/'+this.institute_id+'/'+campaignID;\n        return this.http.get(campignViewURL, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    // delete campign\n    deleteCampaign(campaignID){\n        let deleteURL =this.baseUrl + '/api/v1/campaign/delete/campaign/'+this.institute_id+'/'+campaignID;\n        return this.http.delete(deleteURL, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    fetchCampainSMSReport(){\n        let urlCampaign =this.baseUrl +'/api/v1/campaign/fetch/'+this.institute_id;\n        return this.http.post(urlCampaign, {}, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n    }\n\n    fetchSmsReport(obj) {\n        console.log(\"Object\",obj);\n        let tempObj = {\n            batch_size: \"-1\",\n            from_date: obj.from_date == '' ? moment().format('YYYY-MM-DD') : moment(obj.from_date).format('YYYY-MM-DD'),\n            institution_id: obj.institution_id,\n            order_by: \"\",\n            sorted_by: \"\",\n            start_index: \"-1\",\n            to_date: obj.to_date == '' ? '' : moment(obj.to_date).format('YYYY-MM-DD')\n\n        }\n        // obj.from_date = obj.from_date == '' ? moment().format('YYYY-MM-DD') : moment(obj.from_date).format('YYYY-MM-DD');\n        // obj.to_date = obj.to_date == '' ? '' : moment(obj.to_date).format('YYYY-MM-DD');\n\n        let urlSmsReport = this.baseUrl + \"/api/v1/alerts/config/smsReport\";\n\n        return this.http.post(urlSmsReport, tempObj, { headers: this.headers }).pipe(map(\n            res => {\n                return res;\n            },\n            err => {\n                return err;\n            }\n        ))\n\n    }\n\n}","\nimport {map} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from \"@angular/core\";\nimport { AuthenticatorService } from \"../authenticator.service\";\n\n@Injectable()\n\nexport class TeacherAPIService {\n\n    baseUrl: string = '';\n    Authorization: any;\n    headers;\n    institute_id;\n\n    constructor(\n        private http: HttpClient,\n        private auth: AuthenticatorService,\n    ) {\n        this.auth.currentAuthKey.subscribe(key => {\n            this.Authorization = key;\n            this.headers = new HttpHeaders(\n                { \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n        })\n        this.auth.currentInstituteId.subscribe(id => {\n            this.institute_id = id;\n        });\n        this.baseUrl = this.auth.getBaseUrl();\n\n    }\n\n    // List Section Of Teacher\n\n    getAllTeacherList() {\n        let url = this.baseUrl + \"/api/v1/teachers/all/\" + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n\n    deleteTeacher(id){\n        let url = this.baseUrl + \"/api/v1/teachers/\" + id;\n        return this.http.delete(url , {headers:this.headers}).pipe(map(\n            res => {return res;},\n            err => {return err}\n        ))\n    }\n\n    // Add Section Of Teacher\n\n    addNewTeacherDetails(data) {\n        let url = this.baseUrl + '/api/v1/teachers';\n        data.institution_id = this.institute_id;\n        return this.http.post(url, data, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    // Edit Section Of Teacher\n\n    getSelectedTeacherInfo(data) {\n        let url = this.baseUrl + '/api/v1/teachers/' + data;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    saveEditTeacherInformation(teacher_id, data) {\n        let url = this.baseUrl + '/api/v1/teachers/' + teacher_id;\n        data.institution_id = this.institute_id;\n        return this.http.put(url, data, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n\n    downloadDocument(teacher_id) {\n        let url = this.baseUrl + '/api/v1/teachers/getIDCard/' + teacher_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    // View Section Api\n\n    getViewInfoOfTeacher(teacher_id) {\n        let url = this.baseUrl + '/api/v1/teachers/' + teacher_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    getTeacherViewBatchesInfo() {\n        let url = this.baseUrl + '/api/v1/batches/all/' + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    customizedTeacherSearchOnDashBoardView(data, teacher_id) {\n        let url1 = this.http.post(this.baseUrl + '/api/v1/teachers/' + teacher_id + '/dashboard', data, { headers: this.headers });\n        return url1.pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    customizedTeacherSearchOnGuestBatchView(data, teacher_id) {\n        let url1 = this.http.post(this.baseUrl + '/api/v1/teachers/' + teacher_id + '/guestBatches/classes', data, { headers: this.headers });\n        return url1.pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n    viewBatchDetails(data, teacher_id) {\n        let url1 = this.http.post(this.baseUrl + '/api/v1/teachers/' + teacher_id + '/batch/classes', data, { headers: this.headers });\n        return url1.pipe(map(\n            data => {\n                return data;\n            },\n            error => {\n                return error;\n            }\n        ))\n    }\n\n\n}","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticatorService } from \"../authenticator.service\";\n\n@Injectable()\n\nexport class RoleService {\n\n    baseUrl: string = '';\n    Authorization: any;\n    headers;\n    institute_id;\n\n    constructor(\n        private http: HttpClient,\n        private auth: AuthenticatorService,\n    ) {\n        this.auth.currentAuthKey.subscribe(key => {\n            this.Authorization = key;\n            this.headers = new HttpHeaders(\n                { \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n        })\n        this.auth.currentInstituteId.subscribe(id => {\n            this.institute_id = id;\n        });\n        this.baseUrl = this.auth.getBaseUrl();\n    }\n\n    getRoles() {\n        let url = this.baseUrl + \"/api/v1/roleApi/allRoles/\" + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    getAssignedUserList(id) {\n        let url = this.baseUrl + \"/api/v1/roleApi/\" + id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    deleteRole(id) {\n        let url = this.baseUrl + \"/api/v1/roleApi/\" + id;\n        return this.http.delete(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    // Add Edit \n\n    getAllFeature() {\n        let url = this.baseUrl + \"/api/v1/roleApi/allFeatures?categoryWise=true\";\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    getPerticularRoles(id) {\n        let url = this.baseUrl + \"/api/v1/roleApi/role/\" + id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    createRole(obj) {\n        let url = this.baseUrl + \"/api/v1/roleApi/addRole\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    updateRole(obj, id) {\n        let url = this.baseUrl + \"/api/v1/roleApi/editRole/\" + id;\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n}","\nimport {map} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticatorService } from \"../authenticator.service\";\n\n@Injectable()\n\nexport class UserService {\n\n    baseUrl: string = '';\n    Authorization: any;\n    headers;\n    institute_id;\n\n    constructor(\n        private http: HttpClient,\n        private auth: AuthenticatorService,\n    ) {\n        this.auth.currentAuthKey.subscribe(key => {\n            this.Authorization = key;\n            this.headers = new HttpHeaders(\n                { \"Content-Type\": \"application/json\", \"Authorization\": this.Authorization });\n        })\n        // this.auth.currentInstituteId.subscribe(id => {\n            this.institute_id = sessionStorage.getItem('institute_id');\n        // });\n        this.baseUrl = this.auth.getBaseUrl();\n    }\n\n    getUserList(obj, active) {\n        let url = this.baseUrl + \"/api/v1/profiles/all/\" + this.institute_id + \"?active=\" + active;\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    getRoles() {\n        let url = this.baseUrl + \"/api/v1/roleApi/allRoles/\" + this.institute_id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    fetchUserDetails(id) {\n        let url = this.baseUrl + \"/api/v1/profiles/\" + id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    sendSmS(obj) {\n        let url = this.baseUrl + \"/api/v1/profiles/sendAPPSMS/\" + this.institute_id;\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    getItemList(id) {\n        let url = this.baseUrl + \"/api/v1/inventory/item/fetchForUserAllocation/\" + id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    getAllotedHistroy(id) {\n        let url = this.baseUrl + \"/api/v1/inventory/item/user/txHistory/\" + id;\n        return this.http.get(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    allocateItem(obj) {\n        obj.institution_id = this.institute_id;\n        let url = this.baseUrl + \"/api/v1/inventory/item/user/allocate\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    deleteInventory(id) {\n        let url = this.baseUrl + \"/api/v1/inventory/item/txHistory/\" + id;\n        return this.http.delete(url, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    createUser(obj) {\n        obj.institute_id = this.institute_id;\n        let url = this.baseUrl + \"/api/v1/profiles\";\n        return this.http.post(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n    updateUserDetails(obj , id){\n        obj.institute_id = this.institute_id;\n        let url = this.baseUrl + \"/api/v1/profiles/\" + id;\n        return this.http.put(url, obj, { headers: this.headers }).pipe(map(\n            res => { return res; },\n            err => { return err; }\n        ))\n    }\n\n}"]}